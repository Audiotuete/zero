/* eslint-disable */
/* tslint:disable */
/**
 * This is an autogenerated file created by the Stencil compiler.
 * It contains typing information for all components that exist in this project.
 */
import { HTMLStencilElement, JSXBase } from "@stencil/core/internal";
export namespace Components {
    interface ZAspectRatio {
        "maxWidth": string;
        "ratio": string;
    }
    interface ZBox {
        "align": 'center' | 'flex-start' | 'flex-end';
        "as": 'header' | 'footer' | 'main' | 'nav' | 'article' | 'section' | 'search' | 'aside';
        "background": string;
        "block": boolean;
        "border": string;
        "borderColor": string;
        "borderRadius": string;
        "borderStyle": string;
        "borderWidth": string;
        "boxShadow": string;
        "columnGap": string;
        "cursor": string;
        "flex": string;
        "gap": string;
        "h": string;
        "justify": 'center' | 'flex-start' | 'flex-end' | 'space-between' | 'space-around' | 'space-evenly';
        "m": string;
        "mb": string;
        "ml": string;
        "mr": string;
        "mt": string;
        "name": string;
        "p": string;
        "pb": string;
        "pl": string;
        "pointerEvents": string;
        "pr": string;
        "pt": string;
        "row": boolean;
        "rowGap": string;
        "w": string;
        "wrap": boolean;
        "zIndex": string;
    }
    interface ZHeading {
        "color": string;
        "fontSize": string;
        "href": string;
        "level": '1' | '2' | '3' | '4' | '5' | '6';
        "spacingBottom": string;
        "spacingTop": string;
        "targetBlank": boolean;
    }
    interface ZHighlight {
        "bold": boolean;
        "code": boolean;
        "color": string;
        "fontSize": string;
        "italic": boolean;
        "mark": boolean;
        "strike": boolean;
        "sub": boolean;
        "sup": boolean;
        "transform": 'none' | 'capitalize' | 'uppercase' | 'lowercase' | 'full-width' | 'full-size-kana';
        "underline": boolean;
    }
    interface ZListBox {
        "align": 'center' | 'flex-start' | 'flex-end';
        "background": string;
        "block": boolean;
        "border": string;
        "borderColor": string;
        "borderRadius": string;
        "borderStyle": string;
        "borderWidth": string;
        "boxShadow": string;
        "columnGap": string;
        "cursor": string;
        "flex": string;
        "gap": string;
        "h": string;
        "justify": 'center' | 'flex-start' | 'flex-end' | 'space-between' | 'space-around' | 'space-evenly';
        "m": string;
        "mb": string;
        "ml": string;
        "mr": string;
        "mt": string;
        "name": string;
        "p": string;
        "pb": string;
        "pl": string;
        "pointerEvents": string;
        "pr": string;
        "pt": string;
        "row": boolean;
        "rowGap": string;
        "w": string;
        "wrap": boolean;
        "zIndex": string;
    }
    interface ZListItem {
        "m": string;
        "mb": string;
        "ml": string;
        "mr": string;
        "mt": string;
        "p": string;
        "pb": string;
        "pl": string;
        "pr": string;
        "pt": string;
    }
    interface ZTableBuilder {
        "data": [] | Array<string[]>;
        "options"?: Array<{ name: string; key: string; width?: string }>;
    }
    interface ZText {
        "color": string;
        "fontSize": string;
        "hyphens": boolean;
        "inline": boolean;
        "lineHeight": string;
        "textAlign": 'center' | 'right' | 'left' | 'justify';
        "transform": 'none' | 'capitalize' | 'uppercase' | 'lowercase' | 'full-width' | 'full-size-kana';
    }
}
declare global {
    interface HTMLZAspectRatioElement extends Components.ZAspectRatio, HTMLStencilElement {
    }
    var HTMLZAspectRatioElement: {
        prototype: HTMLZAspectRatioElement;
        new (): HTMLZAspectRatioElement;
    };
    interface HTMLZBoxElement extends Components.ZBox, HTMLStencilElement {
    }
    var HTMLZBoxElement: {
        prototype: HTMLZBoxElement;
        new (): HTMLZBoxElement;
    };
    interface HTMLZHeadingElement extends Components.ZHeading, HTMLStencilElement {
    }
    var HTMLZHeadingElement: {
        prototype: HTMLZHeadingElement;
        new (): HTMLZHeadingElement;
    };
    interface HTMLZHighlightElement extends Components.ZHighlight, HTMLStencilElement {
    }
    var HTMLZHighlightElement: {
        prototype: HTMLZHighlightElement;
        new (): HTMLZHighlightElement;
    };
    interface HTMLZListBoxElement extends Components.ZListBox, HTMLStencilElement {
    }
    var HTMLZListBoxElement: {
        prototype: HTMLZListBoxElement;
        new (): HTMLZListBoxElement;
    };
    interface HTMLZListItemElement extends Components.ZListItem, HTMLStencilElement {
    }
    var HTMLZListItemElement: {
        prototype: HTMLZListItemElement;
        new (): HTMLZListItemElement;
    };
    interface HTMLZTableBuilderElement extends Components.ZTableBuilder, HTMLStencilElement {
    }
    var HTMLZTableBuilderElement: {
        prototype: HTMLZTableBuilderElement;
        new (): HTMLZTableBuilderElement;
    };
    interface HTMLZTextElement extends Components.ZText, HTMLStencilElement {
    }
    var HTMLZTextElement: {
        prototype: HTMLZTextElement;
        new (): HTMLZTextElement;
    };
    interface HTMLElementTagNameMap {
        "z-aspect-ratio": HTMLZAspectRatioElement;
        "z-box": HTMLZBoxElement;
        "z-heading": HTMLZHeadingElement;
        "z-highlight": HTMLZHighlightElement;
        "z-list-box": HTMLZListBoxElement;
        "z-list-item": HTMLZListItemElement;
        "z-table-builder": HTMLZTableBuilderElement;
        "z-text": HTMLZTextElement;
    }
}
declare namespace LocalJSX {
    interface ZAspectRatio {
        "maxWidth"?: string;
        "ratio": string;
    }
    interface ZBox {
        "align"?: 'center' | 'flex-start' | 'flex-end';
        "as"?: 'header' | 'footer' | 'main' | 'nav' | 'article' | 'section' | 'search' | 'aside';
        "background"?: string;
        "block"?: boolean;
        "border"?: string;
        "borderColor"?: string;
        "borderRadius"?: string;
        "borderStyle"?: string;
        "borderWidth"?: string;
        "boxShadow"?: string;
        "columnGap"?: string;
        "cursor"?: string;
        "flex"?: string;
        "gap"?: string;
        "h"?: string;
        "justify"?: 'center' | 'flex-start' | 'flex-end' | 'space-between' | 'space-around' | 'space-evenly';
        "m"?: string;
        "mb"?: string;
        "ml"?: string;
        "mr"?: string;
        "mt"?: string;
        "name"?: string;
        "p"?: string;
        "pb"?: string;
        "pl"?: string;
        "pointerEvents"?: string;
        "pr"?: string;
        "pt"?: string;
        "row"?: boolean;
        "rowGap"?: string;
        "w"?: string;
        "wrap"?: boolean;
        "zIndex"?: string;
    }
    interface ZHeading {
        "color"?: string;
        "fontSize"?: string;
        "href"?: string;
        "level": '1' | '2' | '3' | '4' | '5' | '6';
        "spacingBottom"?: string;
        "spacingTop"?: string;
        "targetBlank"?: boolean;
    }
    interface ZHighlight {
        "bold"?: boolean;
        "code"?: boolean;
        "color"?: string;
        "fontSize"?: string;
        "italic"?: boolean;
        "mark"?: boolean;
        "strike"?: boolean;
        "sub"?: boolean;
        "sup"?: boolean;
        "transform"?: 'none' | 'capitalize' | 'uppercase' | 'lowercase' | 'full-width' | 'full-size-kana';
        "underline"?: boolean;
    }
    interface ZListBox {
        "align"?: 'center' | 'flex-start' | 'flex-end';
        "background"?: string;
        "block"?: boolean;
        "border"?: string;
        "borderColor"?: string;
        "borderRadius"?: string;
        "borderStyle"?: string;
        "borderWidth"?: string;
        "boxShadow"?: string;
        "columnGap"?: string;
        "cursor"?: string;
        "flex"?: string;
        "gap"?: string;
        "h"?: string;
        "justify"?: 'center' | 'flex-start' | 'flex-end' | 'space-between' | 'space-around' | 'space-evenly';
        "m"?: string;
        "mb"?: string;
        "ml"?: string;
        "mr"?: string;
        "mt"?: string;
        "name"?: string;
        "p"?: string;
        "pb"?: string;
        "pl"?: string;
        "pointerEvents"?: string;
        "pr"?: string;
        "pt"?: string;
        "row"?: boolean;
        "rowGap"?: string;
        "w"?: string;
        "wrap"?: boolean;
        "zIndex"?: string;
    }
    interface ZListItem {
        "m"?: string;
        "mb"?: string;
        "ml"?: string;
        "mr"?: string;
        "mt"?: string;
        "p"?: string;
        "pb"?: string;
        "pl"?: string;
        "pr"?: string;
        "pt"?: string;
    }
    interface ZTableBuilder {
        "data": [] | Array<string[]>;
        "options"?: Array<{ name: string; key: string; width?: string }>;
    }
    interface ZText {
        "color"?: string;
        "fontSize"?: string;
        "hyphens"?: boolean;
        "inline"?: boolean;
        "lineHeight"?: string;
        "textAlign"?: 'center' | 'right' | 'left' | 'justify';
        "transform"?: 'none' | 'capitalize' | 'uppercase' | 'lowercase' | 'full-width' | 'full-size-kana';
    }
    interface IntrinsicElements {
        "z-aspect-ratio": ZAspectRatio;
        "z-box": ZBox;
        "z-heading": ZHeading;
        "z-highlight": ZHighlight;
        "z-list-box": ZListBox;
        "z-list-item": ZListItem;
        "z-table-builder": ZTableBuilder;
        "z-text": ZText;
    }
}
export { LocalJSX as JSX };
declare module "@stencil/core" {
    export namespace JSX {
        interface IntrinsicElements {
            "z-aspect-ratio": LocalJSX.ZAspectRatio & JSXBase.HTMLAttributes<HTMLZAspectRatioElement>;
            "z-box": LocalJSX.ZBox & JSXBase.HTMLAttributes<HTMLZBoxElement>;
            "z-heading": LocalJSX.ZHeading & JSXBase.HTMLAttributes<HTMLZHeadingElement>;
            "z-highlight": LocalJSX.ZHighlight & JSXBase.HTMLAttributes<HTMLZHighlightElement>;
            "z-list-box": LocalJSX.ZListBox & JSXBase.HTMLAttributes<HTMLZListBoxElement>;
            "z-list-item": LocalJSX.ZListItem & JSXBase.HTMLAttributes<HTMLZListItemElement>;
            "z-table-builder": LocalJSX.ZTableBuilder & JSXBase.HTMLAttributes<HTMLZTableBuilderElement>;
            "z-text": LocalJSX.ZText & JSXBase.HTMLAttributes<HTMLZTextElement>;
        }
    }
}
